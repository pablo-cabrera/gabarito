{
    "project": {
        "name": "gabarito",
        "description": "JS unit tests",
        "version": "0.0.1",
        "url": "https://github.com/pablo-cabrera/gabarito"
    },
    "files": {
        "lib/plumbing/ConsoleReporter.js": {
            "name": "lib/plumbing/ConsoleReporter.js",
            "modules": {},
            "classes": {
                "gabarito.plumbing.ConsoleReporter": 1
            },
            "fors": {
                "gabarito.plumbing.ConsoleReporter": 1
            },
            "namespaces": {}
        },
        "lib/plumbing/Environment.js": {
            "name": "lib/plumbing/Environment.js",
            "modules": {},
            "classes": {
                "gabarito.plumbing.Environment": 1
            },
            "fors": {
                "gabarito.plumbing.Environment": 1
            },
            "namespaces": {}
        },
        "lib/plumbing/JUnitXmlReporter.js": {
            "name": "lib/plumbing/JUnitXmlReporter.js",
            "modules": {},
            "classes": {
                "gabarito.plumbing.JUnitXmlReporter": 1
            },
            "fors": {
                "gabarito.plumbing.JUnitXmlReporter": 1
            },
            "namespaces": {}
        },
        "lib/plumbing/NodeEnvironment.js": {
            "name": "lib/plumbing/NodeEnvironment.js",
            "modules": {},
            "classes": {
                "gabarito.plumbing.NodeEnvironment": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/plumbing/PhantomEnvironment.js": {
            "name": "lib/plumbing/PhantomEnvironment.js",
            "modules": {},
            "classes": {
                "gabarito.plumbing.PhantomEnvironment": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "lib/plumbing/Reporter.js": {
            "name": "lib/plumbing/Reporter.js",
            "modules": {},
            "classes": {
                "gabarito.plumbing.Reporter": 1
            },
            "fors": {
                "gabarito.plumbing.Reporter": 1
            },
            "namespaces": {}
        },
        "lib/plumbing/Runner.js": {
            "name": "lib/plumbing/Runner.js",
            "modules": {},
            "classes": {
                "gabarito.plumbing.Runner": 1
            },
            "fors": {
                "gabarito.plumbing.Runner": 1
            },
            "namespaces": {}
        },
        "lib/plumbing/ServerEnvironment.js": {
            "name": "lib/plumbing/ServerEnvironment.js",
            "modules": {},
            "classes": {
                "gabarito.plumbing.ServerEnvironment": 1
            },
            "fors": {
                "gabarito.plumbing.ServerEnvironment": 1
            },
            "namespaces": {}
        },
        "lib/gabarito.js": {
            "name": "lib/gabarito.js",
            "modules": {},
            "classes": {
                "gabarito.Assert": 1,
                "gabarito.AssertThat": 1,
                "gabarito.TestBuilder": 1,
                "gabarito.Matcher": 1,
                "gabarito.VarargsMatcher": 1,
                "gabarito.Gabarito": 1,
                "gabarito.GrabberMatcher": 1,
                "gabarito.ArgsGrabberMatcher": 1,
                "gabarito.SpyVerifier": 1,
                "gabarito.Spy": 1,
                "gabarito.Context": 1
            },
            "fors": {
                "gabarito.Assert": 1,
                "gabarito.AssertThat": 1,
                "gabarito.TestBuilder": 1,
                "gabarito.Matcher": 1,
                "gabarito.Gabarito": 1,
                "gabarito.SpyVerifier": 1,
                "gabarito.Spy": 1,
                "gabarito.Context": 1
            },
            "namespaces": {}
        },
        "yuidoc-extras/ClauseResult.js": {
            "name": "yuidoc-extras/ClauseResult.js",
            "modules": {},
            "classes": {
                "gabarito.ClauseResult": 1
            },
            "fors": {
                "gabarito.ClauseResult": 1
            },
            "namespaces": {}
        },
        "yuidoc-extras/EnvironmentResult.js": {
            "name": "yuidoc-extras/EnvironmentResult.js",
            "modules": {},
            "classes": {
                "gabarito.EnvironmentResult": 1
            },
            "fors": {
                "gabarito.EnvironmentResult": 1
            },
            "namespaces": {}
        },
        "yuidoc-extras/Grabber.js": {
            "name": "yuidoc-extras/Grabber.js",
            "modules": {},
            "classes": {
                "gabarito.Grabber": 1
            },
            "fors": {
                "gabarito.Grabber": 1
            },
            "namespaces": {}
        },
        "yuidoc-extras/SpyCall.js": {
            "name": "yuidoc-extras/SpyCall.js",
            "modules": {},
            "classes": {
                "gabarito.SpyCall": 1
            },
            "fors": {
                "gabarito.SpyCall": 1
            },
            "namespaces": {}
        },
        "yuidoc-extras/TestResult.js": {
            "name": "yuidoc-extras/TestResult.js",
            "modules": {},
            "classes": {
                "gabarito.TestResult": 1
            },
            "fors": {
                "gabarito.TestResult": 1
            },
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "gabarito.plumbing.ConsoleReporter": {
            "name": "gabarito.plumbing.ConsoleReporter",
            "shortname": "gabarito.plumbing.ConsoleReporter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/plumbing/ConsoleReporter.js",
            "line": 33,
            "description": "The console reporter prints the gabarito events to the node's console\nwith colors and what-not.",
            "extends": "gabarito.plumbing.Reporter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "console",
                    "description": "",
                    "type": "Console",
                    "optional": true
                },
                {
                    "name": "nowGiver",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ]
        },
        "gabarito.plumbing.Environment": {
            "name": "gabarito.plumbing.Environment",
            "shortname": "gabarito.plumbing.Environment",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/plumbing/Environment.js",
            "line": 7,
            "description": "The environment is responsible for loading the gabarito, the test files and\nrunning the tests themselves.\n\nIt must implement the method getName in order to describe itself to the\nreporters.\n\nThe dispatch method receives the files list, the reporters involved and a\ncallback function that should be called when things complete, passing the\nresults to the callback function as first argument.",
            "is_constructor": 1
        },
        "gabarito.plumbing.JUnitXmlReporter": {
            "name": "gabarito.plumbing.JUnitXmlReporter",
            "shortname": "gabarito.plumbing.JUnitXmlReporter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/plumbing/JUnitXmlReporter.js",
            "line": 23,
            "description": "The JUnitXmlReporter produces a XML file with the test results that has\nthe jUnit format. Useful to use along with your favorite CI solution.",
            "extends": "gabarito.plumbing.Reporter",
            "is_constructor": 1,
            "params": [
                {
                    "name": "file",
                    "description": "The file to write the xml itself",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "The name of the jUnit report",
                    "type": "String"
                },
                {
                    "name": "xmlbuilder",
                    "description": "",
                    "type": "XmlBuilder",
                    "optional": true
                },
                {
                    "name": "fs",
                    "description": "",
                    "type": "FileSystem",
                    "optional": true
                },
                {
                    "name": "nowGiver",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ]
        },
        "gabarito.plumbing.NodeEnvironment": {
            "name": "gabarito.plumbing.NodeEnvironment",
            "shortname": "gabarito.plumbing.NodeEnvironment",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/plumbing/NodeEnvironment.js",
            "line": 17,
            "description": "The NodeEnvironment runs the tests under the node-js itself. It loades\nthe files using the require mechanism, but it deletes them from the\nnode's cache beforehand.",
            "extends": "gabarito.plumbing.Environment",
            "is_constructor": 1,
            "params": [
                {
                    "name": "gabarito",
                    "description": "A gabarito instance",
                    "type": "gabarito.Gabarito",
                    "optional": true
                },
                {
                    "name": "require",
                    "description": "The module.require function",
                    "type": "Module/require",
                    "optional": true
                }
            ]
        },
        "gabarito.plumbing.PhantomEnvironment": {
            "name": "gabarito.plumbing.PhantomEnvironment",
            "shortname": "gabarito.plumbing.PhantomEnvironment",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/plumbing/PhantomEnvironment.js",
            "line": 20,
            "description": "The PhantomEnvironment uses the phantomjs to navigate to\n\"http://localhost:1432\" in order to run the tests.",
            "extends": "gabarito.plumbing.ServerEnvironment",
            "is_constructor": 1,
            "params": [
                {
                    "name": "phantom",
                    "description": "The phantom module",
                    "type": "Phantom",
                    "optional": true
                }
            ]
        },
        "gabarito.plumbing.Reporter": {
            "name": "gabarito.plumbing.Reporter",
            "shortname": "gabarito.plumbing.Reporter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/plumbing/Reporter.js",
            "line": 6,
            "description": "The reporter class that describes all the events issued by the environment\nwhile running the tests.\n\nA reporter may implement any method described here, the default\nimplementation does nothing.",
            "is_constructor": 1
        },
        "gabarito.plumbing.Runner": {
            "name": "gabarito.plumbing.Runner",
            "shortname": "gabarito.plumbing.Runner",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/plumbing/Runner.js",
            "line": 22,
            "description": "The gabarito runner. It needs the reporters in order to receive the\nvarius events issued by the environments. The environments in which the\ntest should run, and the files containing the tests themselves.",
            "is_constructor": 1
        },
        "gabarito.plumbing.ServerEnvironment": {
            "name": "gabarito.plumbing.ServerEnvironment",
            "shortname": "gabarito.plumbing.ServerEnvironment",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/plumbing/ServerEnvironment.js",
            "line": 34,
            "description": "The server environment provides a simple http server to serve the test\nfiles and run the tests themselves within a browser.\n\nAn implementation must implement a way of dispatching a browser to\nnavigate to \"http://localhost:1432\" and it may implement a method to\nclose the browser when the gabarito has finished.",
            "extends": "gabarito.plumbing.Environment",
            "is_constructor": 1,
            "params": [
                {
                    "name": "http",
                    "description": "The node http library",
                    "type": "HTTP",
                    "optional": true
                },
                {
                    "name": "fs",
                    "description": "The node file system library",
                    "type": "FileSystem",
                    "optional": true
                }
            ]
        },
        "gabarito.Assert": {
            "name": "gabarito.Assert",
            "shortname": "gabarito.Assert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/gabarito.js",
            "line": 25,
            "description": "The Assert class provides the various assertions used within tests.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "parts",
                    "description": "",
                    "type": "Parts::Parts",
                    "optional": true
                }
            ]
        },
        "gabarito.AssertThat": {
            "name": "gabarito.AssertThat",
            "shortname": "gabarito.AssertThat",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/gabarito.js",
            "line": 430,
            "description": "A nice helper to use asserts in a more expressive way. It has all\nthe methods from the {{#crossLink \"gabarito.Assert\"}}{{/crossLink}}.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "assert",
                    "description": "",
                    "type": "gabarito.Assert"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "Mixed"
                }
            ]
        },
        "gabarito.TestBuilder": {
            "name": "gabarito.TestBuilder",
            "shortname": "gabarito.TestBuilder",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/gabarito.js",
            "line": 722,
            "description": "The test builder is a helper that builds a test in a more expressive\nway.\n\nUsage:\n```\ngabarito.test().\nname(\"test name\").\nbefore(function () {\n    // runs before each clause\n}).\nafter(function () {\n    // runs after each clause\n}).\n\nclause(\"an unimplemented clause\").\nclause(\"another clause\", function () {\n   // clause body\n});\n```",
            "is_constructor": 1,
            "params": [
                {
                    "name": "test",
                    "description": "The actual test object",
                    "type": "Object"
                }
            ]
        },
        "gabarito.Matcher": {
            "name": "gabarito.Matcher",
            "shortname": "gabarito.Matcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/gabarito.js",
            "line": 830,
            "description": "The matcher consists of a single function that evaluates whether a\ngiven values meets the matcher function criteria.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "matcher",
                    "description": "The matcher function",
                    "type": "Function"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ]
        },
        "gabarito.VarargsMatcher": {
            "name": "gabarito.VarargsMatcher",
            "shortname": "gabarito.VarargsMatcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/gabarito.js",
            "line": 886,
            "description": "The varargs matcher uses a single function that will receive an array\ncontaining all the remaining args passed to the function while applying\nthe matchers.\n\nThis matcher should always be the last matcher.",
            "extends": "gabarito.Matcher",
            "is_constructor": 1,
            "params": [
                {
                    "name": "matcher",
                    "description": "The matcher function",
                    "type": "Function"
                }
            ]
        },
        "gabarito.Gabarito": {
            "name": "gabarito.Gabarito",
            "shortname": "gabarito.Gabarito",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/gabarito.js",
            "line": 1449,
            "is_constructor": 1
        },
        "gabarito.GrabberMatcher": {
            "name": "gabarito.GrabberMatcher",
            "shortname": "gabarito.GrabberMatcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/gabarito.js",
            "line": 1048,
            "description": "Matcher that always passes and stores the passed value for later use.",
            "extends": "gabarito.Matcher",
            "uses": [
                "gabarito.Grabber"
            ]
        },
        "gabarito.ArgsGrabberMatcher": {
            "name": "gabarito.ArgsGrabberMatcher",
            "shortname": "gabarito.ArgsGrabberMatcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/gabarito.js",
            "line": 1074,
            "description": "Matcher that always passes and stores the passed values for later\nuse.",
            "extends": "gabarito.VarargsMatcher",
            "uses": [
                "gabarito.Grabber"
            ]
        },
        "gabarito.SpyVerifier": {
            "name": "gabarito.SpyVerifier",
            "shortname": "gabarito.SpyVerifier",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/gabarito.js",
            "line": 1119,
            "description": "The verifier is used to check for the arguments, return or error\nthrown.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "call",
                    "description": "",
                    "type": "gabarito.SpyCall"
                }
            ]
        },
        "gabarito.Spy": {
            "name": "gabarito.Spy",
            "shortname": "gabarito.Spy",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/gabarito.js",
            "line": 1296,
            "description": "The spy relays the calls to the actual function, but records every\ncall, along with its parameters, its return or error if thrown.\n\nTo verify a given call, the\n{{#crossLink \"gabarito.SpyVerifier\"}}{{/crossLink}} may be obtained\nthrough the verify method.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "fn",
                    "description": "The function to spy on",
                    "type": "Function"
                }
            ]
        },
        "gabarito.Context": {
            "name": "gabarito.Context",
            "shortname": "gabarito.Context",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "lib/gabarito.js",
            "line": 1477,
            "description": "The context class is passed to each clause when it is run, also to\nthe before and after functions.\n\nIt provides means to run tests asynchronously through the\n{{#crossLink \"gabarito.Context/stay\"}}{{/crossLink}},\n{{#crossLink \"gabarito.Context/go\"}}{{/crossLink}} and\n{{#crossLink \"gabarito.Context/going\"}}{{/crossLink}} methods.",
            "is_constructor": 1
        },
        "gabarito.ClauseResult": {
            "name": "gabarito.ClauseResult",
            "shortname": "gabarito.ClauseResult",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "yuidoc-extras/ClauseResult.js",
            "line": 1,
            "description": "Dummy class that describes the clause result data structure",
            "is_constructor": 1
        },
        "gabarito.EnvironmentResult": {
            "name": "gabarito.EnvironmentResult",
            "shortname": "gabarito.EnvironmentResult",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "yuidoc-extras/EnvironmentResult.js",
            "line": 1,
            "description": "Dummy class that describes the environment results data structure",
            "is_constructor": 1
        },
        "gabarito.Grabber": {
            "name": "gabarito.Grabber",
            "shortname": "gabarito.Grabber",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "gabarito.GrabberMatcher",
                "gabarito.ArgsGrabberMatcher"
            ],
            "file": "yuidoc-extras/Grabber.js",
            "line": 1,
            "description": "Interface used for the grabber matchers",
            "is_constructor": 1
        },
        "gabarito.SpyCall": {
            "name": "gabarito.SpyCall",
            "shortname": "gabarito.SpyCall",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "yuidoc-extras/SpyCall.js",
            "line": 1,
            "description": "Structure class that represents a function call",
            "is_constructor": 1
        },
        "gabarito.TestResult": {
            "name": "gabarito.TestResult",
            "shortname": "gabarito.TestResult",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "yuidoc-extras/TestResult.js",
            "line": 1,
            "description": "Dummy class that describes the test results data structure",
            "is_constructor": 1
        }
    },
    "classitems": [
        {
            "file": "lib/plumbing/ConsoleReporter.js",
            "line": 92,
            "description": "Prints a row saying that things are starting.",
            "itemtype": "method",
            "name": "start",
            "class": "gabarito.plumbing.ConsoleReporter"
        },
        {
            "file": "lib/plumbing/ConsoleReporter.js",
            "line": 104,
            "description": "Prints a small summary when things have finished showing the test\nresults.",
            "itemtype": "method",
            "name": "finish",
            "params": [
                {
                    "name": "results",
                    "description": "",
                    "type": "gabarito.EnvironmentResults[]"
                }
            ],
            "class": "gabarito.plumbing.ConsoleReporter"
        },
        {
            "file": "lib/plumbing/ConsoleReporter.js",
            "line": 146,
            "description": "Prints a row stating that that n tests will be verified.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "tests",
                    "description": "",
                    "type": "String[]"
                }
            ],
            "class": "gabarito.plumbing.ConsoleReporter"
        },
        {
            "file": "lib/plumbing/ConsoleReporter.js",
            "line": 167,
            "description": "Prints a row stating which test is about to be verified.",
            "itemtype": "method",
            "name": "begin",
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "test",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "gabarito.plumbing.ConsoleReporter"
        },
        {
            "file": "lib/plumbing/ConsoleReporter.js",
            "line": 184,
            "description": "Prints a small summary for the test that has ended.",
            "itemtype": "method",
            "name": "end",
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "test",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "results",
                    "description": "",
                    "type": "gabarito.TestResult"
                }
            ],
            "class": "gabarito.plumbing.ConsoleReporter"
        },
        {
            "file": "lib/plumbing/ConsoleReporter.js",
            "line": 209,
            "description": "Prints a summary for the environment when it has completed.",
            "itemtype": "method",
            "name": "complete",
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "results",
                    "description": "",
                    "type": "gabarito.TestResult[]"
                }
            ],
            "class": "gabarito.plumbing.ConsoleReporter"
        },
        {
            "file": "lib/plumbing/ConsoleReporter.js",
            "line": 244,
            "description": "Prints a green line stating that the test clause has passed",
            "itemtype": "method",
            "name": "pass",
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "test",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "clause",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "result",
                    "description": "",
                    "type": "gabarito.ClauseResult"
                }
            ],
            "class": "gabarito.plumbing.ConsoleReporter"
        },
        {
            "file": "lib/plumbing/ConsoleReporter.js",
            "line": 261,
            "description": "Prints a red line stating that the test clause has failed.",
            "itemtype": "method",
            "name": "fail",
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "test",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "clause",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "result",
                    "description": "",
                    "type": "gabarito.ClauseResult"
                }
            ],
            "class": "gabarito.plumbing.ConsoleReporter"
        },
        {
            "file": "lib/plumbing/ConsoleReporter.js",
            "line": 280,
            "description": "Prints the environment's name and every argument on a new line.",
            "itemtype": "method",
            "name": "say",
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "args",
                    "description": "",
                    "type": "String",
                    "multiple": true
                }
            ],
            "class": "gabarito.plumbing.ConsoleReporter"
        },
        {
            "file": "lib/plumbing/ConsoleReporter.js",
            "line": 297,
            "description": "Prints a message stating that the environment issued an error and\nprints the error itself in red.",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "env",
                    "description": "The environment",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "error",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "class": "gabarito.plumbing.ConsoleReporter"
        },
        {
            "file": "lib/plumbing/Environment.js",
            "line": 23,
            "description": "The environment's name",
            "itemtype": "method",
            "name": "getName",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "gabarito.plumbing.Environment"
        },
        {
            "file": "lib/plumbing/Environment.js",
            "line": 35,
            "description": "Method called by the runner that receives the files to be loaded, the\nreporters that should receive all events and the callback function that\nmust be called passing all the results at the end of things.",
            "itemtype": "method",
            "name": "dispatch",
            "params": [
                {
                    "name": "files",
                    "description": "The files list",
                    "type": "String[]"
                },
                {
                    "name": "reporters",
                    "description": "",
                    "type": "gabarito.plumbing.Reporter[]"
                },
                {
                    "name": "done",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "gabarito.plumbing.Environment"
        },
        {
            "file": "lib/plumbing/JUnitXmlReporter.js",
            "line": 130,
            "description": "Produces the XML itself",
            "itemtype": "method",
            "name": "finish",
            "params": [
                {
                    "name": "results",
                    "description": "",
                    "type": "gabarito.EnvironmentResults[]"
                }
            ],
            "class": "gabarito.plumbing.JUnitXmlReporter"
        },
        {
            "file": "lib/plumbing/Reporter.js",
            "line": 19,
            "description": "Issued when the runner starts",
            "itemtype": "method",
            "name": "start",
            "class": "gabarito.plumbing.Reporter"
        },
        {
            "file": "lib/plumbing/Reporter.js",
            "line": 27,
            "description": "Issued when the runner finishes",
            "itemtype": "method",
            "name": "finish",
            "params": [
                {
                    "name": "results",
                    "description": "",
                    "type": "gabarito.EnvironmentResults[]"
                }
            ],
            "class": "gabarito.plumbing.Reporter"
        },
        {
            "file": "lib/plumbing/Reporter.js",
            "line": 37,
            "description": "Issued when an environment has initialized",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "env",
                    "description": "The environment that has\n           initialized",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "tests",
                    "description": "The test names that will run",
                    "type": "String[]"
                }
            ],
            "class": "gabarito.plumbing.Reporter"
        },
        {
            "file": "lib/plumbing/Reporter.js",
            "line": 49,
            "description": "Issued when an environment has completed",
            "itemtype": "method",
            "name": "complete",
            "params": [
                {
                    "name": "env",
                    "description": "The environment that has\n           completed",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "results",
                    "description": "The environment's results",
                    "type": "gabarito.TestResult[]"
                }
            ],
            "class": "gabarito.plumbing.Reporter"
        },
        {
            "file": "lib/plumbing/Reporter.js",
            "line": 61,
            "description": "Issued when a test is about to begin",
            "itemtype": "method",
            "name": "begin",
            "params": [
                {
                    "name": "env",
                    "description": "The environment running the\n           tests",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "test",
                    "description": "The test name",
                    "type": "String"
                }
            ],
            "class": "gabarito.plumbing.Reporter"
        },
        {
            "file": "lib/plumbing/Reporter.js",
            "line": 73,
            "description": "Issued when a test has ended",
            "itemtype": "method",
            "name": "end",
            "params": [
                {
                    "name": "env",
                    "description": "The environment running the\n           tests",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "results",
                    "description": "The results for the test",
                    "type": "gabarito.TestResult"
                }
            ],
            "class": "gabarito.plumbing.Reporter"
        },
        {
            "file": "lib/plumbing/Reporter.js",
            "line": 85,
            "description": "Issued when a test clause is about to be run",
            "itemtype": "method",
            "name": "enter",
            "params": [
                {
                    "name": "env",
                    "description": "The environment running the\n           tests",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "test",
                    "description": "The test name",
                    "type": "String"
                },
                {
                    "name": "clause",
                    "description": "The test clause",
                    "type": "String"
                }
            ],
            "class": "gabarito.plumbing.Reporter"
        },
        {
            "file": "lib/plumbing/Reporter.js",
            "line": 98,
            "description": "Issued when a test clause passes",
            "itemtype": "method",
            "name": "pass",
            "params": [
                {
                    "name": "env",
                    "description": "The environment running the\n           tests",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "test",
                    "description": "The test name",
                    "type": "String"
                },
                {
                    "name": "clause",
                    "description": "The test clause",
                    "type": "String"
                },
                {
                    "name": "result",
                    "description": "The clause result",
                    "type": "gabarito.ClauseResult"
                }
            ],
            "class": "gabarito.plumbing.Reporter"
        },
        {
            "file": "lib/plumbing/Reporter.js",
            "line": 112,
            "description": "Issued when a test clause fail",
            "itemtype": "method",
            "name": "fail",
            "params": [
                {
                    "name": "env",
                    "description": "The environment running the\n           tests",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "test",
                    "description": "The test name",
                    "type": "String"
                },
                {
                    "name": "clause",
                    "description": "The test clause",
                    "type": "String"
                },
                {
                    "name": "result",
                    "description": "The clause result",
                    "type": "gabarito.ClauseResult"
                }
            ],
            "class": "gabarito.plumbing.Reporter"
        },
        {
            "file": "lib/plumbing/Reporter.js",
            "line": 126,
            "description": "Issued when an environment is dispatched",
            "itemtype": "method",
            "name": "dispatch",
            "params": [
                {
                    "name": "env",
                    "description": "The environment",
                    "type": "gabarito.plumbing.Environment"
                }
            ],
            "class": "gabarito.plumbing.Reporter"
        },
        {
            "file": "lib/plumbing/Reporter.js",
            "line": 136,
            "description": "Issued when an environment finishes",
            "itemtype": "method",
            "name": "done",
            "params": [
                {
                    "name": "env",
                    "description": "The environment",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "results",
                    "description": "The results for the\n           environment",
                    "type": "gabarito.EnvironmentResult"
                }
            ],
            "class": "gabarito.plumbing.Reporter"
        },
        {
            "file": "lib/plumbing/Reporter.js",
            "line": 148,
            "description": "Issued when an environment says something",
            "itemtype": "method",
            "name": "say",
            "params": [
                {
                    "name": "env",
                    "description": "The environment",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "args",
                    "description": "",
                    "type": "String",
                    "multiple": true
                }
            ],
            "class": "gabarito.plumbing.Reporter"
        },
        {
            "file": "lib/plumbing/Reporter.js",
            "line": 159,
            "description": "Issued when an error outside a given clause happens",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "env",
                    "description": "The environment",
                    "type": "gabarito.plumbing.Environment"
                },
                {
                    "name": "error",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "class": "gabarito.plumbing.Reporter"
        },
        {
            "file": "lib/plumbing/Runner.js",
            "line": 62,
            "description": "Adds a file within the runner",
            "itemtype": "method",
            "name": "addFile",
            "params": [
                {
                    "name": "file",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "gabarito.plumbing.Runner"
        },
        {
            "file": "lib/plumbing/Runner.js",
            "line": 74,
            "description": "Adds an environment within the runner",
            "itemtype": "method",
            "name": "addRunner",
            "params": [
                {
                    "name": "environment",
                    "description": "",
                    "type": "gabarito.plumbing.Environment"
                }
            ],
            "class": "gabarito.plumbing.Runner"
        },
        {
            "file": "lib/plumbing/Runner.js",
            "line": 86,
            "description": "Adds a reporter within the runner",
            "itemtype": "method",
            "name": "addReporter",
            "params": [
                {
                    "name": "reporter",
                    "description": "",
                    "type": "gabarito.plumbing.Reporter"
                }
            ],
            "class": "gabarito.plumbing.Runner"
        },
        {
            "file": "lib/plumbing/Runner.js",
            "line": 99,
            "description": "Dispatches the runner",
            "itemtype": "method",
            "name": "run",
            "params": [
                {
                    "name": "done",
                    "description": "The function that will be called when things\n           have finished. It will receive the test results as first\n           argument.",
                    "type": "Function"
                }
            ],
            "class": "gabarito.plumbing.Runner"
        },
        {
            "file": "lib/plumbing/ServerEnvironment.js",
            "line": 65,
            "description": "This method may be implemented in order to clean up any browser\nreference.\n\nIt must call the done function afterwards.",
            "itemtype": "method",
            "name": "ditchBrowser",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "done",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "gabarito.plumbing.ServerEnvironment"
        },
        {
            "file": "lib/plumbing/ServerEnvironment.js",
            "line": 250,
            "description": "This method must be implemented in order to dispatch the browser to\nnavigate to \"http://localhost:1432\".\n\nThe done function must be called afterwards.",
            "itemtype": "method",
            "name": "dispatchBrowser",
            "access": "protected",
            "tagname": "",
            "params": [
                {
                    "name": "done",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "gabarito.plumbing.ServerEnvironment"
        },
        {
            "file": "lib/gabarito.js",
            "line": 56,
            "description": "Asserts that both values are the same (using ===)",
            "itemtype": "method",
            "name": "areSame",
            "params": [
                {
                    "name": "a",
                    "description": "A value",
                    "type": "Mixed"
                },
                {
                    "name": "b",
                    "description": "Another value",
                    "type": "Mixed"
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 69,
            "description": "Asserts that both values are not the same (using !==)",
            "itemtype": "method",
            "name": "areNotSame",
            "params": [
                {
                    "name": "a",
                    "description": "A value",
                    "type": "Mixed"
                },
                {
                    "name": "b",
                    "description": "Another value",
                    "type": "Mixed"
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 81,
            "description": "Asserts that both values are equal (using parts.Parts/equals\nmethod).",
            "itemtype": "method",
            "name": "areEqual",
            "params": [
                {
                    "name": "a",
                    "description": "A value",
                    "type": "Mixed"
                },
                {
                    "name": "b",
                    "description": "A another value",
                    "type": "Mixed"
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 92,
            "description": "Asserts that both values are equals by using the passed\nequality function.\n\nThe equality function will receive both values as arguments\nand it must returns true if the values are considered equal.",
            "itemtype": "method",
            "name": "areEqual",
            "params": [
                {
                    "name": "a",
                    "description": "A value",
                    "type": "Mixed"
                },
                {
                    "name": "b",
                    "description": "Another value",
                    "type": "Mixed"
                },
                {
                    "name": "equality",
                    "description": "The equality function",
                    "type": "Function"
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 107,
            "description": "Asserts that both values are equal (using parts.Parts/equals\nmethod).",
            "itemtype": "method",
            "name": "areEqual",
            "params": [
                {
                    "name": "a",
                    "description": "A value",
                    "type": "Mixed"
                },
                {
                    "name": "b",
                    "description": "Another value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String"
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 119,
            "description": "Asserts that both values are equals by using the passed\nequality function.\n\nThe equality function will receive both values as arguments\nand it must returns true if the values are considered equal.",
            "itemtype": "method",
            "name": "areEqual",
            "params": [
                {
                    "name": "a",
                    "description": "A value",
                    "type": "Mixed"
                },
                {
                    "name": "b",
                    "description": "Another value",
                    "type": "Mixed"
                },
                {
                    "name": "equality",
                    "description": "The equality function",
                    "type": "Function"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String"
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 149,
            "description": "Asserts that a given value is an array.",
            "itemtype": "method",
            "name": "isArray",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 160,
            "description": "Asserts that a given value is a boolean.",
            "itemtype": "method",
            "name": "isBoolean",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 171,
            "description": "Asserts that a given value is a function.",
            "itemtype": "method",
            "name": "isFunction",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 183,
            "description": "Asserts that a given value is a number and is not NaN.",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 194,
            "description": "Asserts that a given value is an object.",
            "itemtype": "method",
            "name": "isObject",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 205,
            "description": "Asserts that a given value is a string.",
            "itemtype": "method",
            "name": "isString",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 216,
            "description": "Asserts that a given value is a RegExp instance.",
            "itemtype": "method",
            "name": "isRegExp",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 228,
            "description": "Asserts that a given value is a Date instance.",
            "itemtype": "method",
            "name": "isDate",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 239,
            "description": "Asserts that a given value is an instance of a given type.",
            "itemtype": "method",
            "name": "isInstanceOf",
            "params": [
                {
                    "name": "o",
                    "description": "The object",
                    "type": "Mixed"
                },
                {
                    "name": "t",
                    "description": "The type",
                    "type": "Function"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 252,
            "description": "Asserts that a given value is false.",
            "itemtype": "method",
            "name": "isFalse",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 263,
            "description": "Asserts that a given value is true.",
            "itemtype": "method",
            "name": "isTrue",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 274,
            "description": "Asserts that a given value is NaN.\n\nNote that the value should be the actual NaN and not\nsomething that converts to NaN.",
            "itemtype": "method",
            "name": "isNaN",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 288,
            "description": "Asserts that a given value is not NaN.\n\nNote that the value should be the actual NaN and not\nsomething that converts to NaN.",
            "itemtype": "method",
            "name": "isNotNaN",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 303,
            "description": "Asserts that a given value is null.",
            "itemtype": "method",
            "name": "isNull",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 314,
            "description": "Asserts that a given value is not null.",
            "itemtype": "method",
            "name": "isNotNull",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 326,
            "description": "Asserts that a given value is undefined.",
            "itemtype": "method",
            "name": "isUndefined",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 338,
            "description": "Asserts that a given value is undefined.",
            "itemtype": "method",
            "name": "isNotUndefined",
            "params": [
                {
                    "name": "v",
                    "description": "Value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 350,
            "description": "Asserts that a given object has a property",
            "itemtype": "method",
            "name": "hasProperty",
            "params": [
                {
                    "name": "o",
                    "description": "The object",
                    "type": "Object"
                },
                {
                    "name": "p",
                    "description": "The property name",
                    "type": "String"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 363,
            "description": "Asserts that a given object doesn't has a property",
            "itemtype": "method",
            "name": "doesntHasProperty",
            "params": [
                {
                    "name": "o",
                    "description": "The object",
                    "type": "Object"
                },
                {
                    "name": "p",
                    "description": "The property name",
                    "type": "String"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 376,
            "description": "Asserts that a given object owns a property",
            "itemtype": "method",
            "name": "hop",
            "params": [
                {
                    "name": "o",
                    "description": "The object",
                    "type": "Object"
                },
                {
                    "name": "p",
                    "description": "The property name",
                    "type": "String"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 392,
            "description": "Asserts that a given object doesn't own a property",
            "itemtype": "method",
            "name": "dhop",
            "params": [
                {
                    "name": "o",
                    "description": "The object",
                    "type": "Object"
                },
                {
                    "name": "p",
                    "description": "The property name",
                    "type": "String"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 408,
            "description": "A nice helper to use asserts in a more expressive way. It has\n all the methods from the assert itself.\n\nUsage:\n```\nassert.that(someValue).isEqualTo(\"3\");\n```",
            "itemtype": "method",
            "name": "that",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.AssertThat"
            },
            "class": "gabarito.Assert"
        },
        {
            "file": "lib/gabarito.js",
            "line": 443,
            "description": "Asserts that a given collection has a given number of\nelements",
            "itemtype": "method",
            "name": "hasSizeOf",
            "params": [
                {
                    "name": "size",
                    "description": "The given size",
                    "type": "Number"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 488,
            "description": "Asserts that both values are equal (using parts.Parts/equals method).",
            "itemtype": "method",
            "name": "isEqualTo",
            "params": [
                {
                    "name": "b",
                    "description": "A another value",
                    "type": "Mixed"
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 497,
            "description": "Asserts that both values are equals by using the passed equality\nfunction.\n\nThe equality function will receive both values as arguments and it\nmust returns true if the values are considered equal.",
            "itemtype": "method",
            "name": "isEqualTo",
            "params": [
                {
                    "name": "b",
                    "description": "Another value",
                    "type": "Mixed"
                },
                {
                    "name": "equality",
                    "description": "The equality function",
                    "type": "Function"
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 511,
            "description": "Asserts that both values are equal (using parts.Parts/equals method).",
            "itemtype": "method",
            "name": "isEqualTo",
            "params": [
                {
                    "name": "b",
                    "description": "Another value",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String"
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 521,
            "description": "Asserts that both values are equals by using the passed equality\nfunction.\n\nThe equality function will receive both values as arguments and it\nmust returns true if the values are considered equal.",
            "itemtype": "method",
            "name": "isEqualTo",
            "params": [
                {
                    "name": "b",
                    "description": "Another value",
                    "type": "Mixed"
                },
                {
                    "name": "equality",
                    "description": "The equality function",
                    "type": "Function"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String"
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 536,
            "description": "Asserts that a given value is an array.",
            "itemtype": "method",
            "name": "isArray",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 545,
            "description": "Asserts that a given value is a boolean.",
            "itemtype": "method",
            "name": "isBoolean",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 554,
            "description": "Asserts that a given value is a function.",
            "itemtype": "method",
            "name": "isFunction",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 563,
            "description": "Asserts that a given value is a number and is not NaN.",
            "itemtype": "method",
            "name": "isNumber",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 572,
            "description": "Asserts that a given value is an object.",
            "itemtype": "method",
            "name": "isObject",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 581,
            "description": "Asserts that a given value is a string.",
            "itemtype": "method",
            "name": "isString",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 590,
            "description": "Asserts that a given value is a RegExp instance.",
            "itemtype": "method",
            "name": "isRegExp",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 599,
            "description": "Asserts that a given value is a Date instance.",
            "itemtype": "method",
            "name": "isDate",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 608,
            "description": "Asserts that a given value is an instance of a given type.",
            "itemtype": "method",
            "name": "isInstanceOf",
            "params": [
                {
                    "name": "t",
                    "description": "The type",
                    "type": "Function"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 618,
            "description": "Asserts that a given value is false.",
            "itemtype": "method",
            "name": "isFalse",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 627,
            "description": "Asserts that a given value is true.",
            "itemtype": "method",
            "name": "isTrue",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 636,
            "description": "Asserts that a given value is NaN.\n\nNote that the value should be the actual NaN and not something that\nconverts to NaN.",
            "itemtype": "method",
            "name": "isNaN",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 648,
            "description": "Asserts that a given value is not NaN.\n\nNote that the value should be the actual NaN and not something that\nconverts to NaN.",
            "itemtype": "method",
            "name": "isNotNaN",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 660,
            "description": "Asserts that a given value is null.",
            "itemtype": "method",
            "name": "isNull",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 669,
            "description": "Asserts that a given value is not null.",
            "itemtype": "method",
            "name": "isNotNull",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 678,
            "description": "Asserts that a given value is undefined.",
            "itemtype": "method",
            "name": "isUndefined",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 687,
            "description": "Asserts that a given value is undefined.",
            "itemtype": "method",
            "name": "isNotUndefined",
            "params": [
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 696,
            "description": "Asserts that a given object has a property",
            "itemtype": "method",
            "name": "hasProperty",
            "params": [
                {
                    "name": "p",
                    "description": "The property name",
                    "type": "String"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 706,
            "description": "Asserts that a given object owns a property",
            "itemtype": "method",
            "name": "hop",
            "params": [
                {
                    "name": "p",
                    "description": "The property name",
                    "type": "String"
                },
                {
                    "name": "msg",
                    "description": "The error message",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.AssertThat"
        },
        {
            "file": "lib/gabarito.js",
            "line": 754,
            "description": "Adds a clause within the test object.\n\nIf the clause body is omitted, an unimplemented clause that\nalways throws an error will be used instead.",
            "itemtype": "method",
            "name": "clause",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "body",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.TestBuilder"
            },
            "class": "gabarito.TestBuilder"
        },
        {
            "file": "lib/gabarito.js",
            "line": 772,
            "description": "Sets the before function within the test object.",
            "itemtype": "method",
            "name": "before",
            "params": [
                {
                    "name": "before",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.TestBuilder"
            },
            "class": "gabarito.TestBuilder"
        },
        {
            "file": "lib/gabarito.js",
            "line": 786,
            "description": "Sets the after function within the test object.",
            "itemtype": "method",
            "name": "after",
            "params": [
                {
                    "name": "after",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.TestBuilder"
            },
            "class": "gabarito.TestBuilder"
        },
        {
            "file": "lib/gabarito.js",
            "line": 800,
            "description": "Sets test name for the test object.",
            "itemtype": "method",
            "name": "name",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.TestBuilder"
            },
            "class": "gabarito.TestBuilder"
        },
        {
            "file": "lib/gabarito.js",
            "line": 849,
            "description": "The matcher method should evaluate the matcher function and\ntell whether the value matches the criteria.",
            "itemtype": "method",
            "name": "matches",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "gabarito.Matcher"
        },
        {
            "file": "lib/gabarito.js",
            "line": 864,
            "description": "Returns the Error instance with the formatted message using the\nargument's position and the argument itself.",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Mixed"
                },
                {
                    "name": "position",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Error"
            },
            "class": "gabarito.Matcher"
        },
        {
            "file": "lib/gabarito.js",
            "line": 914,
            "description": "Matcher for string type",
            "itemtype": "property",
            "name": "matcher.STRING",
            "type": "{gabarito.Matcher}",
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 924,
            "description": "Matcher for array type",
            "itemtype": "property",
            "name": "matcher.ARRAY",
            "type": "{gabarito.Matcher}",
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 934,
            "description": "Matcher for function type",
            "itemtype": "property",
            "name": "matcher.FUNCTION",
            "type": "{gabarito.Matcher}",
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 944,
            "description": "Matcher for object type",
            "itemtype": "property",
            "name": "matcher.OBJECT",
            "type": "{gabarito.Matcher}",
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 954,
            "description": "Matcher for array type",
            "itemtype": "property",
            "name": "matcher.NUMBER",
            "type": "{gabarito.Matcher}",
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 964,
            "description": "Always matches",
            "itemtype": "property",
            "name": "matcher.ANY",
            "type": "{gabarito.Matcher}",
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 973,
            "description": "Always matches any varargs",
            "itemtype": "property",
            "name": "matcher.ANY_ARGS",
            "type": "{gabarito.VarargsMatcher}",
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 982,
            "description": "Matcher for a given type",
            "itemtype": "method",
            "name": "matcher.type",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "msg",
                    "description": "The optional message format",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "gabarito.Matcher"
            },
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1009,
            "description": "Matcher for varargs",
            "itemtype": "method",
            "name": "matcher.args",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "msg",
                    "description": "The optional message format",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.VarargsMatcher"
            },
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1023,
            "description": "Literal value matcher\n\nIf given value is an object (not a function) or an array, it uses\nparts.equals, otherwise it will check for it's identity",
            "itemtype": "method",
            "name": "matcher.value",
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "Mixed"
                },
                {
                    "name": "msg",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.Matcher"
            },
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1056,
            "description": "Returns a matcher that always passes. This matcher stores the value\npassed to the matcher for further inspection later on.",
            "itemtype": "method",
            "name": "matcher.grabber",
            "return": {
                "description": "",
                "type": "gabarito.GrabberMatcher"
            },
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1083,
            "description": "Just like the grabber matcher, this matcher that always passes. It\nstores the values passed to the matcher for further inspection\nlater on.\n\nIt works as a varargs matcher.",
            "itemtype": "method",
            "name": "matcher.argsGrabber",
            "return": {
                "description": "",
                "type": "gabarito.ArgsGrabberMatcher"
            },
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1133,
            "description": "Checks if the calls arguments matches with the given matchers",
            "itemtype": "method",
            "name": "args",
            "chainable": 1,
            "params": [
                {
                    "name": "matchers",
                    "description": "",
                    "type": "gabarito.Matcher|mixed",
                    "multiple": true
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.SpyVerifier"
            },
            "class": "gabarito.SpyVerifier"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1171,
            "description": "Asserts that this call was made before another call",
            "itemtype": "method",
            "name": "before",
            "chainable": 1,
            "params": [
                {
                    "name": "anotherCall",
                    "description": "",
                    "type": "gabarito.SpyVerifier"
                },
                {
                    "name": "msg",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.SpyVerifier"
            },
            "class": "gabarito.SpyVerifier"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1191,
            "description": "Asserts that this call was made after another call",
            "itemtype": "method",
            "name": "after",
            "chainable": 1,
            "params": [
                {
                    "name": "anotherCall",
                    "description": "",
                    "type": "gabarito.SpyVerifier"
                },
                {
                    "name": "msg",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.SpyVerifier"
            },
            "class": "gabarito.SpyVerifier"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1211,
            "description": "Checks what has been throw by the call using the matcher o a\nvalue matcher.",
            "itemtype": "method",
            "name": "withThis",
            "chainable": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "gabarito.Matcher|mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.SpyVerifier"
            },
            "class": "gabarito.SpyVerifier"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1236,
            "description": "Checks what has been throw by the call using the matcher o a\nvalue matcher.",
            "itemtype": "method",
            "name": "throwing",
            "chainable": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "gabarito.Matcher|mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.SpyVerifier"
            },
            "class": "gabarito.SpyVerifier"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1265,
            "description": "Checks what has been returmed by the call using the matcher o a\nvalue matcher.",
            "itemtype": "method",
            "name": "returning",
            "chainable": 1,
            "params": [
                {
                    "name": "v",
                    "description": "",
                    "type": "gabarito.Matcher|mixed"
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.SpyVerifier"
            },
            "class": "gabarito.SpyVerifier"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1313,
            "description": "The handler function that relays all the calls, this is the\nactual function that should be used instead of the real one.",
            "itemtype": "property",
            "name": "handler",
            "type": "{function}",
            "class": "gabarito.Spy"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1339,
            "description": "Relays the verify call to the spy instance.",
            "itemtype": "method",
            "name": "handler.verify",
            "params": [
                {
                    "name": "msg",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.SpyVerifier"
            },
            "class": "gabarito.Spy"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1355,
            "description": "Relays the noCalls call to the spy instance.",
            "itemtype": "method",
            "name": "handler.noCalls",
            "params": [
                {
                    "name": "msg",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Spy"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1371,
            "description": "Relays the reset call to the spy instance.",
            "itemtype": "method",
            "name": "handler.reset",
            "class": "gabarito.Spy"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1385,
            "description": "Creates a spy instance and returns its handler",
            "itemtype": "method",
            "name": "on",
            "static": 1,
            "params": [
                {
                    "name": "fn",
                    "description": "The function to spy on",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Returns the handler function from the spy\n        instance",
                "type": "Function"
            },
            "class": "gabarito.Spy"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1402,
            "description": "Returns a spy verifier if a call was made",
            "itemtype": "method",
            "name": "verify",
            "params": [
                {
                    "name": "msg",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.SpyVerifier"
            },
            "class": "gabarito.Spy"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1421,
            "description": "Throws an error if a call was made",
            "itemtype": "method",
            "name": "noCalls",
            "params": [
                {
                    "name": "msg",
                    "description": "",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "gabarito.Spy"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1436,
            "description": "Removes all recorded calls from the instance",
            "itemtype": "method",
            "name": "reset",
            "class": "gabarito.Spy"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1563,
            "description": "Tells the context to wait for an async continuation.",
            "itemtype": "method",
            "name": "stay",
            "params": [
                {
                    "name": "timeout",
                    "description": "Timeout before it breaks\n                          (defaults to 10000);",
                    "type": "Number",
                    "optional": true
                }
            ],
            "class": "gabarito.Context"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1589,
            "description": "Tells the context to resume",
            "itemtype": "method",
            "name": "go",
            "params": [
                {
                    "name": "block",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "gabarito.Context"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1608,
            "description": "Returns a function that when called, tells the context to\nresume the current clause and also passes the parameters\nalong to the given function.\n\nJust a syntatic sugar to avoid another nesting level.",
            "itemtype": "method",
            "name": "going",
            "params": [
                {
                    "name": "block",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "gabarito.Context"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1731,
            "description": "Adds a test using the\n{{#crossLink \"gabarito.TestBuilder\"}}{{/crossLink}} within\ngabarito.",
            "itemtype": "method",
            "name": "test",
            "params": [
                {
                    "name": "name",
                    "description": "The test's name",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.TestBuilder"
            },
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1753,
            "description": "Resets the gabarito to it's initial state, removing all listeners\nas well.",
            "itemtype": "method",
            "name": "reset",
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1778,
            "description": "Tells gabarito that the preparations will be async.\n\nThis method returns a function that should be called when all\ntests are ready.",
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1794,
            "description": "Adds a test within the gabarito.\n\nThe test is an object containing various methods. Each method\nis treated as a test clause. Every draft is run to check if it\nworks.",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "test",
                    "description": "The test itself",
                    "type": "Object"
                }
            ],
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1810,
            "description": "Register an event listener for a given event.\n\nAvailable events:\n\n- init: The initialization of the gabarito verification.\n- begin: The beginning of a test verification.\n- enter: When gabarito is about to enter into a clause\nverification.\n- pass: Whenever a clause passes.\n- fail: Whenever a clause fails.\n- end: When a test verification has ended.\n- complete: When all the test verifications have completed.\n- say: Custom event to emit whatever message.",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1839,
            "description": "Removes an event listener for a given event.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "",
                    "type": "Functin"
                }
            ],
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1859,
            "description": "Verify all tests",
            "itemtype": "method",
            "name": "verify",
            "params": [
                {
                    "name": "done",
                    "description": "",
                    "type": "Function",
                    "optional": true
                }
            ],
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1888,
            "description": "Tells gabarito to say something.",
            "itemtype": "method",
            "name": "say",
            "params": [
                {
                    "name": "args",
                    "description": "",
                    "type": "Mixed",
                    "multiple": true
                }
            ],
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1900,
            "description": "Reference containing the various assert utils.",
            "itemtype": "property",
            "name": "assert",
            "type": "{gabarito.Assert}",
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1909,
            "description": "Creates an instance of\n{{#crossLink \"gabarito.Spy\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "spy",
            "params": [
                {
                    "name": "fn",
                    "description": "Function to spy on",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The spy handler function",
                "type": "Function"
            },
            "class": "gabarito.Gabarito"
        },
        {
            "file": "lib/gabarito.js",
            "line": 1921,
            "description": "Creates a custom matcher using the function as a matching\ncriteria.\n\nThe function will receive a value to examinate and should return\na boolean indicating whether the criteria is met.",
            "itemtype": "method",
            "name": "matcher",
            "params": [
                {
                    "name": "fn",
                    "description": "The matcher function",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "",
                "type": "gabarito.Matcher"
            },
            "class": "gabarito.Gabarito"
        },
        {
            "file": "yuidoc-extras/ClauseResult.js",
            "line": 8,
            "description": "The timestamp that the clause has started",
            "itemtype": "property",
            "name": "start",
            "type": "{number}",
            "class": "gabarito.ClauseResult"
        },
        {
            "file": "yuidoc-extras/ClauseResult.js",
            "line": 16,
            "description": "The number of miliseconds that the clause took to run",
            "itemtype": "property",
            "name": "elapsedTime",
            "type": "{number}",
            "class": "gabarito.ClauseResult"
        },
        {
            "file": "yuidoc-extras/ClauseResult.js",
            "line": 24,
            "description": "The thrown error (if any) by the test clause",
            "itemtype": "property",
            "name": "error",
            "type": "{Error}",
            "class": "gabarito.ClauseResult"
        },
        {
            "file": "yuidoc-extras/EnvironmentResult.js",
            "line": 8,
            "description": "The related environment that has run the tests",
            "itemtype": "property",
            "name": "environment",
            "type": "{gabarito.plumbing.Environment}",
            "class": "gabarito.EnvironmentResult"
        },
        {
            "file": "yuidoc-extras/EnvironmentResult.js",
            "line": 16,
            "description": "A collection of test results for the given environment",
            "itemtype": "property",
            "name": "results",
            "type": "{gabarito.TestResult[]}",
            "class": "gabarito.EnvironmentResult"
        },
        {
            "file": "yuidoc-extras/Grabber.js",
            "line": 8,
            "description": "Returns the stored value",
            "itemtype": "method",
            "name": "grab",
            "return": {
                "description": "",
                "type": "Mixed"
            },
            "class": "gabarito.Grabber"
        },
        {
            "file": "yuidoc-extras/SpyCall.js",
            "line": 8,
            "description": "The `this` object within the function call",
            "itemtype": "property",
            "name": "that",
            "type": "{object}",
            "class": "gabarito.SpyCall"
        },
        {
            "file": "yuidoc-extras/SpyCall.js",
            "line": 16,
            "description": "The arguments lists given to the function call",
            "itemtype": "property",
            "name": "args",
            "type": "{mixed[]}",
            "class": "gabarito.SpyCall"
        },
        {
            "file": "yuidoc-extras/SpyCall.js",
            "line": 24,
            "description": "The given order number for the function call",
            "itemtype": "property",
            "name": "order",
            "type": "{number}",
            "class": "gabarito.SpyCall"
        },
        {
            "file": "yuidoc-extras/SpyCall.js",
            "line": 32,
            "description": "The return value for the function call",
            "itemtype": "property",
            "name": "returning",
            "type": "{mixed}",
            "class": "gabarito.SpyCall"
        },
        {
            "file": "yuidoc-extras/SpyCall.js",
            "line": 40,
            "description": "The error thrown by the function call",
            "itemtype": "property",
            "name": "thrown",
            "type": "{mixed}",
            "class": "gabarito.SpyCall"
        },
        {
            "file": "yuidoc-extras/TestResult.js",
            "line": 8,
            "description": "The test name",
            "itemtype": "property",
            "name": "test",
            "type": "{string}",
            "class": "gabarito.TestResult"
        },
        {
            "file": "yuidoc-extras/TestResult.js",
            "line": 16,
            "description": "The timestamp that the test has started",
            "itemtype": "property",
            "name": "start",
            "type": "{number}",
            "class": "gabarito.TestResult"
        },
        {
            "file": "yuidoc-extras/TestResult.js",
            "line": 24,
            "description": "The timestamp that the test has ended",
            "itemtype": "property",
            "name": "end",
            "type": "{number}",
            "class": "gabarito.TestResult"
        },
        {
            "file": "yuidoc-extras/TestResult.js",
            "line": 32,
            "description": "Dictionary in which the key are the related clause and the value is a\n{{#crossLink \"gabarito.ClauseResult\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "results",
            "type": "{object}",
            "class": "gabarito.TestResult"
        }
    ],
    "warnings": [
        {
            "message": "Missing item type\nTells gabarito that the preparations will be async.\n\nThis method returns a function that should be called when all\ntests are ready.",
            "line": " lib/gabarito.js:1778"
        },
        {
            "message": "Missing item type\nRemoves an event listener for a given event.",
            "line": " lib/gabarito.js:1839"
        }
    ]
}